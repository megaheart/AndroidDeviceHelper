<Application x:Class="AndroidDeviceHelper.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:AndroidDeviceHelper"
             xmlns:conv="clr-namespace:AndroidDeviceHelper.View.Converters"
             xmlns:ctrl="clr-namespace:AndroidDeviceHelper.View.CustomizedControls"
             xmlns:m="clr-namespace:AndroidDeviceHelper.View.CustomizedModels"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--<ResourceDictionary Source="en-US.xaml"></ResourceDictionary>-->
                <ResourceDictionary Source="DarkTheme.xaml"></ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            <!--#region Fonts-->
            <FontFamily x:Key="MaterialIcons">pack://application:,,,/Fonts/#Material Icons</FontFamily>
            <FontFamily x:Key="MaterialIcons_Round">pack://application:,,,/Fonts/#Material Icons Round</FontFamily>
            <FontFamily x:Key="MaterialIcons_TwoTone">pack://application:,,,/Fonts/#Material Icons Two Tone</FontFamily>
            <FontFamily x:Key="MaterialIcons_Outlined">pack://application:,,,/Fonts/#Material Icons Outlined</FontFamily>
            <!--#endregion-->
            <!--#region UI Structure Style-->
            <ControlTemplate x:Key="DisablePaddingProperty" TargetType="UserControl">
                <ContentPresenter></ContentPresenter>
            </ControlTemplate>
            <ControlTemplate x:Key="RoughTextBoxStyle" TargetType="TextBox">
                <ScrollViewer x:Name="PART_ContentHost" VerticalScrollBarVisibility="Auto"/>
            </ControlTemplate>
            <!--#endregion-->
            <!--#region Colors-->
            <SolidColorBrush x:Key="Red" Color="#d64949"></SolidColorBrush>
            <SolidColorBrush x:Key="LightRed" Color="#d95959"></SolidColorBrush>
            <SolidColorBrush x:Key="DarkRed" Color="#d02f2f"></SolidColorBrush>
            <SolidColorBrush x:Key="Blue" Color="#3f7dd9"></SolidColorBrush>
            <SolidColorBrush x:Key="LightBlue" Color="#558bdd"></SolidColorBrush>
            <SolidColorBrush x:Key="DarkBlue" Color="#FF014874"></SolidColorBrush>
            <SolidColorBrush x:Key="Yellow" Color="#e8b600"></SolidColorBrush>
            <SolidColorBrush x:Key="LightYellow" Color="#ffc800"></SolidColorBrush>
            <SolidColorBrush x:Key="DarkYellow" Color="#cca000"></SolidColorBrush>
            <SolidColorBrush x:Key="Green" Color="#2c902b"></SolidColorBrush>
            <SolidColorBrush x:Key="LightGreen" Color="#319d2f"></SolidColorBrush>
            <SolidColorBrush x:Key="DarkGreen" Color="#2b8929"></SolidColorBrush>
            <SolidColorBrush x:Key="Color_Control_UnderLine" Color="#F9A602"></SolidColorBrush>
            <SolidColorBrush x:Key="Color_Control_UnderLine_Light" Color="#FFF9C502"></SolidColorBrush>
            <!--#endregion-->
            <!--#region -->
            <conv:DockToColumns x:Key="DockToColumnsConverter"></conv:DockToColumns>
            <conv:DockToRows x:Key="DockToRowsConverter"></conv:DockToRows>
            <conv:Division x:Key="DividingConverter"></conv:Division>
            <conv:HalfOfHeightToCornerRadius x:Key="GetCornerRadiusFromHalfOfHeight"></conv:HalfOfHeightToCornerRadius>
            <conv:BoolToVisibility x:Key="BoolToVisibilityConverter"/>
            <!--#endregion-->            
            <DrawingBrush x:Key="Gray_DashedLine" Viewport="0,0,8,7" ViewportUnits="Absolute" TileMode="Tile">
                <DrawingBrush.Drawing>
                    <DrawingGroup>
                        <GeometryDrawing Brush="Gray">
                            <GeometryDrawing.Geometry>
                                <GeometryGroup>
                                    <RectangleGeometry Rect="0,0,50,50" />
                                    <RectangleGeometry Rect="50,50,50,50" />
                                </GeometryGroup>
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingGroup>
                </DrawingBrush.Drawing>
            </DrawingBrush>
            <DrawingBrush x:Key="Blue_DashedLine" Viewport="0,0,8,7" ViewportUnits="Absolute" TileMode="Tile">
                <DrawingBrush.Drawing>
                    <DrawingGroup>
                        <GeometryDrawing Brush="{StaticResource Blue}">
                            <GeometryDrawing.Geometry>
                                <GeometryGroup>
                                    <RectangleGeometry Rect="0,0,50,50" />
                                    <RectangleGeometry Rect="50,50,50,50" />
                                </GeometryGroup>
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingGroup>
                </DrawingBrush.Drawing>
            </DrawingBrush>
            <DrawingBrush x:Key="ForegroundColor_DashedLine" Viewport="0,0,8,7" ViewportUnits="Absolute" TileMode="Tile">
                <DrawingBrush.Drawing>
                    <DrawingGroup>
                        <GeometryDrawing Brush="{DynamicResource Color_Foreground}">
                            <GeometryDrawing.Geometry>
                                <GeometryGroup>
                                    <RectangleGeometry Rect="0,0,50,50" />
                                    <RectangleGeometry Rect="50,50,50,50" />
                                </GeometryGroup>
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingGroup>
                </DrawingBrush.Drawing>
            </DrawingBrush>
            
            <Style TargetType="{x:Type Button}">
                <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Foreground" Value="{DynamicResource Color_Foreground}"></Setter>
                <Setter Property="Padding" Value="8,7"></Setter>
                <Setter Property="FontSize" Value="14"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ButtonBase">
                            <Border CornerRadius="2" Padding="{TemplateBinding Padding}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" x:Name="border" BorderThickness="0" Background="{DynamicResource Color_Button_Background}">
                                <Border.RenderTransform>
                                    <TranslateTransform x:Name="transform" Y="0"></TranslateTransform>
                                </Border.RenderTransform>
                                <Border.Effect>
                                    <DropShadowEffect x:Name="shadow" Direction="270" BlurRadius="2" ShadowDepth="3" Opacity="0.3"/>
                                </Border.Effect>
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"></ContentPresenter>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource Color_Button_Hover_Background}"></Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="3" Duration="0:0:0.2" Storyboard.TargetName="transform" Storyboard.TargetProperty="Y"></DoubleAnimation>
                                                <DoubleAnimation To="0" Duration="0:0:0.2" Storyboard.TargetName="shadow" Storyboard.TargetProperty="BlurRadius"></DoubleAnimation>
                                                <DoubleAnimation To="0" Duration="0:0:0.2" Storyboard.TargetName="shadow" Storyboard.TargetProperty="ShadowDepth"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="0" Duration="0:0:0.2" Storyboard.TargetName="transform" Storyboard.TargetProperty="Y"></DoubleAnimation>
                                                <DoubleAnimation To="2" Duration="0:0:0.2" Storyboard.TargetName="shadow" Storyboard.TargetProperty="BlurRadius"></DoubleAnimation>
                                                <DoubleAnimation To="3" Duration="0:0:0.2" Storyboard.TargetName="shadow" Storyboard.TargetProperty="ShadowDepth"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="ButtonBase" x:Key="ButtonStyleV2">
                <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Foreground" Value="{DynamicResource Color_Foreground}"></Setter>
                <Setter Property="Padding" Value="8,7"></Setter>
                <Setter Property="FontSize" Value="14"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ButtonBase">
                            <Border  x:Name="border" Padding="{TemplateBinding Padding}" Background="{DynamicResource Color_Button_Background}">
                                <Border.RenderTransform>
                                    <ScaleTransform x:Name="scale" 
                                                        CenterX="{Binding ElementName=border,Path=ActualWidth, Converter={StaticResource DividingConverter},ConverterParameter=2}"
                                                        CenterY="{Binding ElementName=border,Path=ActualHeight, Converter={StaticResource DividingConverter},ConverterParameter=2}"></ScaleTransform>
                                </Border.RenderTransform>
                                <ContentPresenter VerticalAlignment="Center"></ContentPresenter>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource Color_Button_Hover_Background}"></Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource Color_Button_Press_Background}"></Setter>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="scale" Storyboard.TargetProperty="ScaleX" To="0.94"></DoubleAnimation>
                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="scale" Storyboard.TargetProperty="ScaleY" To="0.94"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="scale" Storyboard.TargetProperty="ScaleX" To="1"></DoubleAnimation>
                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="scale" Storyboard.TargetProperty="ScaleY" To="1"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="ButtonBase" x:Key="RoundedButtonStyleV2">
                <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Foreground" Value="{DynamicResource Color_Foreground}"></Setter>
                <Setter Property="Padding" Value="8,7"></Setter>
                <Setter Property="FontSize" Value="14"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ButtonBase">
                            <Border CornerRadius="2" x:Name="border" Padding="{TemplateBinding Padding}" Background="{DynamicResource Color_Button_Background}">
                                <Border.RenderTransform>
                                    <ScaleTransform x:Name="scale" 
                                                        CenterX="{Binding ElementName=border,Path=ActualWidth, Converter={StaticResource DividingConverter},ConverterParameter=2}"
                                                        CenterY="{Binding ElementName=border,Path=ActualHeight, Converter={StaticResource DividingConverter},ConverterParameter=2}"></ScaleTransform>
                                </Border.RenderTransform>
                                <ContentPresenter VerticalAlignment="Center"></ContentPresenter>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource Color_Button_Hover_Background}"></Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource Color_Button_Press_Background}"></Setter>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="scale" Storyboard.TargetProperty="ScaleX" To="0.94"></DoubleAnimation>
                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="scale" Storyboard.TargetProperty="ScaleY" To="0.94"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="scale" Storyboard.TargetProperty="ScaleX" To="1"></DoubleAnimation>
                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="scale" Storyboard.TargetProperty="ScaleY" To="1"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="TabItem">
                <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Foreground" Value="{DynamicResource Color_Foreground_Dark2}"></Setter>
                <Setter Property="FontSize" Value="14"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Border Padding="{TemplateBinding Padding}" Background="{DynamicResource Color_Button_Background}">
                                <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header">
                                    <ContentPresenter.RenderTransform>
                                        <ScaleTransform x:Name="scale" 
                                                        CenterX="{Binding ElementName=ContentSite,Path=ActualWidth, Converter={StaticResource DividingConverter},ConverterParameter=2}"
                                                        CenterY="{Binding ElementName=ContentSite,Path=ActualHeight, Converter={StaticResource DividingConverter},ConverterParameter=2}"></ScaleTransform>
                                    </ContentPresenter.RenderTransform>
                                </ContentPresenter>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.15" Storyboard.TargetName="scale" Storyboard.TargetProperty="ScaleX" To="1.1"></DoubleAnimation>
                                                <DoubleAnimation Duration="0:0:0.15" Storyboard.TargetName="scale" Storyboard.TargetProperty="ScaleY" To="1.1"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.15" Storyboard.TargetName="scale" Storyboard.TargetProperty="ScaleX" To="1"></DoubleAnimation>
                                                <DoubleAnimation Duration="0:0:0.15" Storyboard.TargetName="scale" Storyboard.TargetProperty="ScaleY" To="1"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource Color_Foreground}"></Setter>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource Color_Foreground_Dark}"></Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="ctrl:CustomizedTabControl">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ctrl:CustomizedTabControl">
                            <DockPanel>
                                <UniformGrid DockPanel.Dock="{TemplateBinding TabStripPlacement}" HorizontalAlignment="Left" x:Name="HeaderPanel"
                                     Rows="{TemplateBinding TabStripPlacement, Converter={StaticResource DockToRowsConverter}}"
                                     Columns="{TemplateBinding TabStripPlacement, Converter={StaticResource DockToColumnsConverter}}" IsItemsHost="True" Background="Transparent" />
                                <Grid>
                                    <ContentPresenter x:Name="PART_SelectedContentHost" Grid.Row="1" ContentSource="SelectedContent"/>
                                    <Line Panel.ZIndex="1" x:Name="PART_MainLine" StrokeThickness="3" Stroke="Gray" ></Line>
                                    <Line Panel.ZIndex="2" x:Name="PART_SelectionLine" StrokeThickness="5" Stroke="{TemplateBinding ThemeColor}"></Line>
                                </Grid>
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="TextBox">
                <Setter Property="FontSize" Value="14"></Setter>
                <Setter Property="Padding" Value="8,5,0,5"></Setter>
                <Setter Property="Cursor" Value="IBeam"></Setter>
                <Setter Property="CaretBrush" Value="{DynamicResource Color_Foreground}"></Setter>
                <Setter Property="Foreground" Value="{DynamicResource Color_Foreground}"></Setter>
                <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Grid>
                                <Border SnapsToDevicePixels="True" CornerRadius="2" BorderThickness="0" Background="{DynamicResource Color_TextBox_Background}">
                                    <Border.Effect>
                                        <DropShadowEffect Direction="270" BlurRadius="2" ShadowDepth="1"></DropShadowEffect>
                                    </Border.Effect>
                                </Border>
                                <ScrollViewer SnapsToDevicePixels="True" x:Name="PART_ContentHost"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="ContentControl" x:Key="PopupContentStyle">
                <Setter Property="Padding" Value="0,4,0,4"></Setter>
                <Setter Property="Background" Value="{DynamicResource Color_Button_Background}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ContentControl">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="8"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <Border Grid.Row="1" BorderBrush="Gray" BorderThickness="1" Padding="{TemplateBinding Padding}" CornerRadius="3" Background="{TemplateBinding Background}">
                                    <!--<Border.Effect>
                                                <DropShadowEffect Direction="270" BlurRadius="2" ShadowDepth="1" Opacity="0.9"/>
                                            </Border.Effect>-->
                                    <ContentPresenter></ContentPresenter>
                                </Border>
                                <Path Data="M7 14l5-5 5 5z" Margin="30,0,0,0" Fill="Gray" HorizontalAlignment="Left" Height="8" Grid.Row="0" Stretch="Fill"  VerticalAlignment="Top" Width="14">
                                    <!--<Path.Effect>
                                                <DropShadowEffect Direction="270" BlurRadius="2" ShadowDepth="-2" Opacity="0.9"/>
                                            </Path.Effect>-->
                                </Path>
                                <Path Data="M7 14l5-5 5 5z" Margin="30,2,0,-1" Fill="{TemplateBinding Background}" HorizontalAlignment="Left" Height="8" Grid.Row="0" Stretch="Fill"  VerticalAlignment="Top" Width="14">
                                    <!--<Path.Effect>
                                                <DropShadowEffect Direction="270" BlurRadius="2" ShadowDepth="-2" Opacity="0.9"/>
                                            </Path.Effect>-->
                                </Path>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            
            <DataTemplate DataType="{x:Type m:MaterialIconSelection}" x:Key="DataTemplateForMaterialIconSelection">
                <StackPanel Orientation="Horizontal" Margin="15,8">
                    <TextBlock FontFamily="Material Icons" FontSize="20" Text="{Binding MaterialIconCode}"></TextBlock>
                    <TextBlock VerticalAlignment="Center" FontSize="14" Margin="7,0,0,0" Text="{Binding Content}"></TextBlock>
                </StackPanel>
            </DataTemplate>
            <!--#region ScrollViewer Style-->
            <Style x:Key="ScrollBarLineButton_AutoToggleStyle" TargetType="{x:Type RepeatButton}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Foreground" Value="{DynamicResource Color_ScrollBar_Foreground}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border x:Name="Border" BorderThickness="0" Background="{DynamicResource Color_ScrollBar_Background}">
                                <Path x:Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" 
                                      Fill="{TemplateBinding Foreground}">
                                </Path>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource Color_ScrollBar_Foreground_Hover}"></Setter>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource Color_ScrollBar_Foreground_Pressed}"></Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ScrollBarPageButton_AutoToggleStyle" TargetType="{x:Type RepeatButton}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Background="Transparent" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ScrollBarThumb_AutoToggleStyle" TargetType="{x:Type Thumb}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="Background" Value="{DynamicResource Color_ScrollBar_Foreground}"></Setter>
                <Setter Property="BorderBrush" Value="{DynamicResource Color_ScrollBar_Background}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource Color_ScrollBar_Foreground_Hover}"></Setter>
                    </Trigger>
                    <Trigger Property="IsDragging" Value="True">
                        <Setter Property="Background" Value="{DynamicResource Color_ScrollBar_Foreground_Pressed}"></Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <ControlTemplate x:Key="VerticalScrollBar_AutoToggleStyle" TargetType="{x:Type ScrollBar}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition MaxHeight="18" />
                        <RowDefinition Height="0.00001*" />
                        <RowDefinition MaxHeight="18" />
                    </Grid.RowDefinitions>

                    <Border x:Name="b" Grid.RowSpan="3" Background="Transparent"></Border>
                    <RepeatButton x:Name="r1" Grid.Row="0" Visibility="Hidden" Style="{StaticResource ScrollBarLineButton_AutoToggleStyle}" Height="18" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
                    <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Style="{StaticResource ScrollBarPageButton_AutoToggleStyle}" Command="ScrollBar.PageUpCommand" />
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb x:Name="t" Opacity="0.65" Style="{StaticResource ScrollBarThumb_AutoToggleStyle}" BorderBrush="Transparent" Margin="1,0,1,0" BorderThickness="12,0,4,0"></Thumb>
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Style="{StaticResource ScrollBarPageButton_AutoToggleStyle}" Command="ScrollBar.PageDownCommand" />
                        </Track.IncreaseRepeatButton>
                    </Track>
                    <RepeatButton x:Name="r2" Grid.Row="2" Visibility="Hidden" Style="{StaticResource ScrollBarLineButton_AutoToggleStyle}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation Storyboard.TargetName="t" Storyboard.TargetProperty="BorderThickness" Duration="0:0:0.15" To="3,0"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation Storyboard.TargetName="t" Storyboard.TargetProperty="BorderThickness" Duration="0:0:0.15" To="12,0,4,0"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                        <Setter TargetName="b" Property="Background" Value="{DynamicResource Color_ScrollBar_Background}"></Setter>
                        <Setter TargetName="t" Property="Opacity" Value="1"></Setter>
                        <Setter TargetName="r1" Property="Visibility" Value="Visible"></Setter>
                        <Setter TargetName="r2" Property="Visibility" Value="Visible"></Setter>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="HorizontalScrollBar_AutoToggleStyle" TargetType="{x:Type ScrollBar}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MaxWidth="18" />
                        <ColumnDefinition Width="0.00001*" />
                        <ColumnDefinition MaxWidth="18" />
                    </Grid.ColumnDefinitions>
                    <Border x:Name="b" Grid.ColumnSpan="3" Background="Transparent"></Border>
                    <RepeatButton x:Name="r1" Visibility="Hidden" Grid.Column="0" Style="{StaticResource ScrollBarLineButton_AutoToggleStyle}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
                    <Track x:Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Style="{StaticResource ScrollBarPageButton_AutoToggleStyle}" Command="ScrollBar.PageLeftCommand" />
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb x:Name="t" Opacity="0.65" Style="{StaticResource ScrollBarThumb_AutoToggleStyle}" BorderBrush="Transparent" Margin="0,1,0,1" BorderThickness="0,12,0,4"></Thumb>
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Style="{StaticResource ScrollBarPageButton_AutoToggleStyle}" Command="ScrollBar.PageRightCommand" />
                        </Track.IncreaseRepeatButton>
                    </Track>
                    <RepeatButton x:Name="r2" Visibility="Hidden" Grid.Column="2" Style="{StaticResource ScrollBarLineButton_AutoToggleStyle}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation Storyboard.TargetName="t" Storyboard.TargetProperty="BorderThickness" Duration="0:0:0.15" To="0,3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation Storyboard.TargetName="t" Storyboard.TargetProperty="BorderThickness" Duration="0:0:0.15" To="0,12,0,4"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                        <Setter TargetName="b" Property="Background" Value="{DynamicResource Color_ScrollBar_Background}"></Setter>
                        <Setter TargetName="t" Property="Opacity" Value="1"></Setter>
                        <Setter TargetName="r1" Property="Visibility" Value="Visible"></Setter>
                        <Setter TargetName="r2" Property="Visibility" Value="Visible"></Setter>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style x:Key="ScrollViewer_AutoToggleStyle" TargetType="{x:Type ScrollViewer}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="VerticalScrollBarVisibility" Value="Auto"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Border Grid.ColumnSpan="2" Grid.RowSpan="2" Background="{TemplateBinding Background}">
                                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"/>
                                </Border>
                                <ScrollBar x:Name="PART_VerticalScrollBar"
                                    Grid.Row="0"
                                    Grid.Column="1" Width="22"
                                    Template="{StaticResource VerticalScrollBar_AutoToggleStyle}"
                                    Value="{TemplateBinding VerticalOffset}"
                                    Maximum="{TemplateBinding ScrollableHeight}"
                                    ViewportSize="{TemplateBinding ViewportHeight}"
                                    Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                           />
                                <ScrollBar x:Name="PART_HorizontalScrollBar"
                                    Orientation="Horizontal"
                                    Grid.Row="1"
                                    Grid.Column="0" Height="22"
                                    Template="{StaticResource HorizontalScrollBar_AutoToggleStyle}"
                                    Value="{TemplateBinding HorizontalOffset}"
                                    Maximum="{TemplateBinding ScrollableWidth}"
                                    ViewportSize="{TemplateBinding ViewportWidth}"
                                    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--#endregion-->
            <!--#region ComboBox-->
            <DataTemplate DataType="{x:Type local:ComboBoxIconSelection}" x:Key="DataTemplateForComboBoxIconSelection">
                <StackPanel Orientation="Horizontal" Margin="15,8">
                    <TextBlock Foreground="{DynamicResource Color_Options_Foreground}"
                                        FontFamily="{Binding IconsFont}" FontSize="20" Text="{Binding IconCode}"></TextBlock>
                    <TextBlock VerticalAlignment="Center" FontSize="14" Margin="7,0,0,0" Text="{Binding Content}"></TextBlock>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type sys:String}" x:Key="StringTemplateForComboBox">
                <TextBlock VerticalAlignment="Center" FontSize="14" Margin="15,8" Text="{Binding }"></TextBlock>
            </DataTemplate>
            <Style x:Key="ComboBoxItemStyleForComboBoxWithoutTextBox" TargetType="{x:Type ComboBoxItem}">
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Foreground" Value="{DynamicResource Color_Foreground}"></Setter>
                <Setter Property="FontSize" Value="14"></Setter>
                <Setter Property="MinHeight" Value="40"></Setter>
                <Setter Property="Background" Value="{DynamicResource Color_Popup_Background}"></Setter>
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border x:Name="border" Background="{TemplateBinding Background}">
                                <ContentPresenter VerticalAlignment="Center"></ContentPresenter>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#26808080"></Setter>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                    </Trigger>
                    <Trigger Property="IsKeyboardFocused" Value="True">
                        <Setter Property="Background" Value="#40808080"></Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <ControlTemplate TargetType="ToggleButton" x:Key="ToggleButtonStyleForComboBoxWithoutTextBox">
                <Border x:Name="border" CornerRadius="2" BorderThickness="1" BorderBrush="Gray" 
                                                        Background="Transparent">
                    <TextBlock x:Name="dropDownIcon" FontFamily="{StaticResource MaterialIcons}" FontSize="20"
                                                                VerticalAlignment="Center" HorizontalAlignment="Right"
                                                                Foreground="{DynamicResource Color_Foreground_Light2}" Text="keyboard_arrow_down"
                                                                IsHitTestVisible="False" Margin="0,0,8,0">
                        <TextBlock.RenderTransform>
                            <RotateTransform x:Name="textboxTransform" Angle="0" CenterX="10" CenterY="10"></RotateTransform>
                        </TextBlock.RenderTransform>
                    </TextBlock>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" TargetName="border" 
                                                                Value="#26808080"></Setter>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" TargetName="border" 
                                                                Value="#265A5A5A"></Setter>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.2" 
                                                                             Storyboard.TargetName="textboxTransform"
                                                                             Storyboard.TargetProperty="Angle"
                                                                             From="0" To="180"></DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.2" 
                                                                             Storyboard.TargetName="textboxTransform"
                                                                             Storyboard.TargetProperty="Angle"
                                                                             From="180" To="360"></DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="BorderBrush" TargetName="border" 
                                                                Value="{DynamicResource Color_FloorButton_Disabled_Foreground}"></Setter>
                        <Setter Property="Foreground" TargetName="dropDownIcon" 
                                                                Value="{DynamicResource Color_FloorButton_Disabled_Foreground}"></Setter>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style TargetType="ComboBox" x:Key="ComboBoxWithoutTextBoxStyle">
                <Setter Property="Foreground" Value="{DynamicResource Color_Foreground}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <ToggleButton x:Name="ToggleButton" Grid.Column="2" Focusable="false" ClickMode="Press" IsEnabled="{TemplateBinding IsEnabled}"
                                                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              Template="{StaticResource ToggleButtonStyleForComboBoxWithoutTextBox}">
                                </ToggleButton>
                                <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False"
                                                    Content="{TemplateBinding SelectionBoxItem}"
                                                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                    Margin="0,0,36,0"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Left">
                                </ContentPresenter>
                                <TextBox x:Name="PART_EditableTextBox" IsEnabled="{TemplateBinding IsEnabled}"
                                                        Style="{x:Null}"
                                                        Template="{StaticResource RoughTextBoxStyle}"
                                                        VerticalAlignment="Bottom"
                                                        Margin="3,3,23,3"
                                                        Visibility="Hidden"
                                                        Focusable="True"
                                                        Background="Transparent"
                                                        IsReadOnly="{TemplateBinding IsReadOnly}" 
                                                        HorizontalAlignment="Left"/>
                                <Popup x:Name="Popup"
                                                    Placement="Bottom"
                                                    IsOpen="{TemplateBinding IsDropDownOpen}"
                                                    AllowsTransparency="True"
                                                    Focusable="False"
                                                    PopupAnimation="Fade"
                                                    >
                                    <ContentControl x:Name="DropDown" Style="{StaticResource PopupContentStyle}"
                                                        Width="{TemplateBinding ActualWidth}"
                                                        Padding="0,3" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <ScrollViewer SnapsToDevicePixels="True" Style="{StaticResource ScrollViewer_AutoToggleStyle}" HorizontalScrollBarVisibility="Disabled">
                                            <StackPanel IsItemsHost="True">
                                                <StackPanel.Resources>
                                                    <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource ComboBoxItemStyleForComboBoxWithoutTextBox}"></Style>
                                                </StackPanel.Resources>
                                            </StackPanel>
                                        </ScrollViewer>
                                    </ContentControl>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsGrouping" Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="ContentSite" Property="Content" Value="{x:Null}" />
                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ComboBoxItemStyleForEditableComboBox" TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource ComboBoxItemStyleForComboBoxWithoutTextBox}">
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Visibility" Value="Visible"></Setter>
                        <Setter Property="Background" Value="{StaticResource Color_Control_UnderLine}"></Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <ControlTemplate TargetType="ToggleButton" x:Key="ToggleButtonStyleForEditableComboBox">
                <Border x:Name="border" CornerRadius="1" BorderThickness="0,0,0,2" BorderBrush="Gray" 
                                                        Background="Transparent">
                    <TextBlock x:Name="dropDownIcon" FontFamily="{StaticResource MaterialIcons}" FontSize="20"
                                                                VerticalAlignment="Center" HorizontalAlignment="Right"
                                                                Foreground="{DynamicResource Color_Foreground_Light2}" Text="keyboard_arrow_down"
                                                                IsHitTestVisible="False" Margin="0,0,8,0">
                        <TextBlock.RenderTransform>
                            <RotateTransform x:Name="textboxTransform" Angle="0" CenterX="10" CenterY="10"></RotateTransform>
                        </TextBlock.RenderTransform>
                    </TextBlock>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" TargetName="border" 
                                                                Value="#26808080"></Setter>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" TargetName="border" 
                                                                Value="#265A5A5A"></Setter>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter TargetName="border" Property="BorderBrush" 
                                                                Value="{DynamicResource Color_Control_UnderLine}"></Setter>
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.2" 
                                                                             Storyboard.TargetName="textboxTransform"
                                                                             Storyboard.TargetProperty="Angle"
                                                                             From="0" To="180"></DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.2" 
                                                                             Storyboard.TargetName="textboxTransform"
                                                                             Storyboard.TargetProperty="Angle"
                                                                             From="180" To="360"></DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="BorderBrush" TargetName="border" 
                                                                Value="{DynamicResource Color_FloorButton_Disabled_Foreground}"></Setter>
                        <Setter Property="Foreground" TargetName="dropDownIcon" 
                                                                Value="{DynamicResource Color_FloorButton_Disabled_Foreground}"></Setter>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style TargetType="ComboBox" x:Key="EditableComboBoxStyle">
                <Setter Property="Foreground" Value="{DynamicResource Color_Foreground}" />
                <Setter Property="IsEditable" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <ToggleButton x:Name="ToggleButton" Grid.Column="2" Focusable="false" ClickMode="Press" IsEnabled="{TemplateBinding IsEnabled}"
                                                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              Template="{StaticResource ToggleButtonStyleForEditableComboBox}">
                                </ToggleButton>
                                <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False"
                                                    Content="{TemplateBinding SelectionBoxItem}"
                                                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                    Margin="0,0,36,0"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Left">
                                </ContentPresenter>
                                <TextBox x:Name="PART_EditableTextBox" IsEnabled="{TemplateBinding IsEnabled}"
                                                        Style="{x:Null}" Visibility="{TemplateBinding IsEditable, Converter={StaticResource BoolToVisibilityConverter}}"
                                                        Template="{StaticResource RoughTextBoxStyle}"
                                                        VerticalAlignment="Center"
                                                        Margin="0,0,36,0" Foreground="{DynamicResource Color_Foreground}"
                                                        Padding="15,8,0,8" CaretBrush="{DynamicResource Color_Foreground}"
                                                        FontSize="14" Text="{TemplateBinding SelectionBoxItem}"
                                                        Focusable="True" IsHitTestVisible="False"
                                                        Background="Transparent"
                                                        IsReadOnly="{TemplateBinding IsReadOnly}" 
                                                        HorizontalAlignment="Stretch">
                                </TextBox>
                                <Popup x:Name="Popup"
                                                    Placement="Bottom"
                                                    IsOpen="{TemplateBinding IsDropDownOpen}"
                                                    AllowsTransparency="True"
                                                    Focusable="False"
                                                    PopupAnimation="Fade"
                                                    >
                                    <ContentControl x:Name="DropDown" Style="{StaticResource PopupContentStyle}"
                                                        Width="{TemplateBinding ActualWidth}"
                                                        Padding="0,3" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <ScrollViewer SnapsToDevicePixels="True" Style="{StaticResource ScrollViewer_AutoToggleStyle}" HorizontalScrollBarVisibility="Disabled">
                                            <StackPanel IsItemsHost="True">
                                                <StackPanel.Resources>
                                                    <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource ComboBoxItemStyleForEditableComboBox}"></Style>
                                                </StackPanel.Resources>
                                            </StackPanel>
                                        </ScrollViewer>
                                    </ContentControl>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsGrouping" Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="ContentSite" Property="Content" Value="{x:Null}" />
                                    <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                                <!--<Trigger Property="IsDropDownOpen" Value="true">
                                            <Setter TargetName="PART_EditableTextBox" Property="IsDropDownOpen" Value="True"/>
                                        </Trigger>-->
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--#endregion-->
        </ResourceDictionary>
    </Application.Resources>
</Application>
